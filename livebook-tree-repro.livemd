# repro

```elixir
Mix.install([
  {:plug_cowboy, "~> 2.0"},
  {:plug, "~> 1.16"},
  {:kino, "~> 0.12"},
  {:jason, "~> 1.4"},
  {:req, "~> 0.5.0"}
])
```

## Section

```elixir
defmodule FrameManager do
  @frame Kino.Frame.new()

  def frame do
    @frame
  end

  def append_to_frame(data) do
    Kino.Frame.append(@frame, Kino.Tree.new(data))
  end
end

Kino.nothing()
```

```elixir
frame = FrameManager.frame()
```

```elixir
defmodule MyPlug do
  import Plug.Conn

  def init(_opts) do
    # initialize options
  end

  def call(conn, _opts) do
    with {:ok, body, _} <- Plug.Conn.read_body(conn),
         {:ok, json_body} <- Jason.decode(body) do
      FrameManager.append_to_frame(json_body)

      conn
      |> put_resp_content_type("text/plain")
      |> send_resp(200, "Hello world")
    else
      _ ->
        conn
        |> put_resp_content_type("text/plain")
        |> send_resp(400, "Invalid request")
    end
  end
end

webserver = {Plug.Cowboy, plug: MyPlug, scheme: :http, options: [port: 4000]}
{:ok, webserver_process} = Supervisor.start_link([webserver], strategy: :one_for_one)
```

```elixir
Req.post!("http://localhost:4000", json: %{hello: "world"})
```
